input:
{
    train_data_info: 'data/mnist/mnist_data_info.pkl.gz'
    train_data: 'data/mnist/mnist_'
    render_data: 'data/truncated_mnist.pkl.gz'
    render_data_has_labels: True
    render_data_has_multi_labels: False
}
shape:
{
    input_vector_length: 784 #num pixels per image
    mid_layer_sizes: [500,100]
    inner_code_length: 30
}
,
train:
{
    weights_file: "data/mnist/unsupervised_mnist_weights.pkl.gz"
    skip_trace_during_training: False
    skip_trace_images: False
    train_batch_size:10, 
    pretraining_epochs:50,
    training_epochs:10,
},
tsne:
{
    perplexity: 30 #roughly 'the optimal number of neighbours'
},
output:
{
    coords_file: 'out/unsupervised_mnist_coords.csv'
    labels_file: 'out/unsupervised_mnist_labels.csv'
    codes_file: 'out/unsupervised_mnist_codes.csv'
}