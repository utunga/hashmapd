input:
{
    csv_data: 'data/fake_img_data.csv'
    csv_contains_pixels: True
    csv_contains_counts: False
    number_of_examples: 14
    number_for_training:14
    number_for_validation:0
    number_for_testing: $input.number_of_examples-$input.number_for_training-$input.number_for_validation
    train_data: 'data/fake_img_data.pkl.gz' # data split into train, validate, and test
    render_data: 'data/render_fake_img.pkl.gz' #data in one numpy array, for purposes of rendering
    render_data_has_labels: False
    
},
shape:
{
    input_vector_length: 784 #num pixels per image
    mid_layer_sizes: [10]
    inner_code_length: 4
}
,
train:
{
    weights_file: "data/fake_img_weights.pkl.gz"
    skip_trace_images: False
    train_batch_size:2, 
    pretraining_epochs:500,
    training_epochs:1000,
},
