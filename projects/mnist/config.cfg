input:
{
    render_data:'data/render_data_0.pkl.gz',
    number_for_training:5000,
    number_for_validation:1000,
    number_for_testing:1000
},
shape:
{
    input_vector_length: 784, #num pixels per image
    mid_layer_sizes: [500,200],
    inner_code_length: 30
},
train:
{
    k:1,
    method:'cd'
    weights_file: "data/unsupervised_mnist_weights.pkl.gz",
    skip_trace_images: False,
    train_batch_size:5,
    pretraining_epochs:10000,
    training_epochs:10000,
    patience_increase:10
    improvement_threshold: 0.9995

},
tsne:
{
    perplexity: 10 #roughly 'the optimal number of neighbours'
    initial_fit_iterations: 10000
    fit_one_point_iterations: 100
},
output:
{
    coords_file: 'out/unsupervised_mnist_coords.csv'
    labels_file: 'out/unsupervised_mnist_labels.csv'
    codes_file: 'out/unsupervised_mnist_codes.csv'
}
